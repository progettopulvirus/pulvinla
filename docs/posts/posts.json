[
  {
    "path": "posts/2021-02-22-analisi-no2-toscana/",
    "title": "Analisi NO2 Toscana",
    "description": "Descrizione NO2, serie 2013-2020.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\n\n\n\nNumero stazioni: 34\n\n\n\nNumero di osservazioni per anno per stazione\nTutte le serie coprono il periodo 2013-2020 (ad eccezione di una stazione).\n\n\n\nDistibuzione no2\n\nSkim summary statistics\n n obs: 46603 \n n variables: 5 \n group variables:  \n\n── Variable type:factor ──────────────────────────────────────────────\n  variable missing complete     n n_unique\n tipo_zona       0    46603 46603        3\n                        top_counts ordered\n U: 35008, R: 7245, S: 4350, NA: 0   FALSE\n\n── Variable type:numeric ─────────────────────────────────────────────\n variable missing complete     n    mean    sd     p0     p25     p50\n       dd       0    46603 46603   15.63  8.74    1      8      16   \n       mm       0    46603 46603    3.51  1.71    1      2       4   \n    value     910    45693 46603   22.5  16.56    0.1   10.17   18.43\n       yy       0    46603 46603 2016.66  2.24 2013   2015    2017   \n     p75    p100     hist\n   23      31    ▇▇▇▇▆▇▇▆\n    5       6    ▇▇▁▇▇▁▇▇\n   31.26  114.39 ▇▆▃▂▁▁▁▁\n 2019    2020    ▆▇▇▇▇▇▇▇\n\nDistibuzione no2 per tipo di zona (Urban, Suburban, Rural)\n\nSkim summary statistics\n n obs: 46603 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd   p0   p25\n         R    value     163     7082  7245  8.62  8.72 0.1   2.83\n         S    value     130     4220  4350 15.14 11.65 0.1   6.35\n         U    value     617    34391 35008 26.26 16.48 0.13 13.61\n   p50   p75   p100     hist\n  5.52 11.22  58.57 ▇▃▁▁▁▁▁▁\n 12.48 20.13  66.48 ▇▇▅▂▁▁▁▁\n 22.26 35.13 114.39 ▆▇▅▂▁▁▁▁\n\n\n\n\n\nDistribuzione mensile no2\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-22-analisi-no2-toscana/analisi-no2-toscana_files/figure-html5/mappaAra-1.png",
    "last_modified": "2021-02-22T23:53:31+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-analisi-pm10-toscana/",
    "title": "Analisi PM10 Toscana",
    "description": "Descrizione PM10, serie 2013-2020.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\n\n\n\nNumero stazioni: 33\n\n\n\nNumero di osservazioni per anno per stazione\nTutte le serie coprono il periodo 2013-2020 (ad eccezione di una stazione).\n\n\n\nDistibuzione pm10\n\nSkim summary statistics\n n obs: 44660 \n n variables: 5 \n group variables:  \n\n── Variable type:factor ──────────────────────────────────────────────\n  variable missing complete     n n_unique\n tipo_zona       0    44660 44660        3\n                        top_counts ordered\n U: 37430, S: 4344, R: 2886, NA: 0   FALSE\n\n── Variable type:numeric ─────────────────────────────────────────────\n variable missing complete     n    mean    sd   p0  p25  p50  p75\n       dd       0    44660 44660   15.63  8.74    1    8   16   23\n       mm       0    44660 44660    3.51  1.71    1    2    4    5\n    value    1401    43259 44660   21.75 13.66    0   13   19   26\n       yy       0    44660 44660 2016.69  2.22 2013 2015 2017 2019\n p100     hist\n   31 ▇▇▇▇▆▇▇▆\n    6 ▇▇▁▇▇▁▇▇\n  168 ▇▅▁▁▁▁▁▁\n 2020 ▆▆▇▇▇▇▇▇\n\nDistibuzione pm10 per tipo di zona (Urban, Suburban, Rural)\n\nSkim summary statistics\n n obs: 44660 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd p0 p25 p50 p75\n         R    value     149     2737  2886 18.59 16.72  0   9  14  22\n         S    value     124     4220  4344 17.84 12.4   0  10  15  22\n         U    value    1128    36302 37430 22.44 13.43  0  14  19  27\n p100     hist\n  168 ▇▂▁▁▁▁▁▁\n  138 ▇▅▁▁▁▁▁▁\n  164 ▇▆▁▁▁▁▁▁\n\n\n\n\n\nDistribuzione mensile pm10\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-22-analisi-pm10-toscana/analisi-pm10-toscana_files/figure-html5/mappaAra-1.png",
    "last_modified": "2021-02-22T23:55:29+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-codice-modello-no2-spde-con-ar1-rw1-su-day/",
    "title": "Codice modello NO2: spde con ar1, rw1 su day",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\nCaratteristiche modello:\nar1 su control group\nrw1 su giorni\niid su station_eu_code (codice centralina)\nCodice modello\n\n\n Scarica codice modello\n\n\nRisultati effetti fissi e random effects\n\n\n Scarica html\n\n\nRisultati residui\n\n\n Scarica html\n\n\nRisultati spde\n\n\n Scarica html\n\n\n\n\nrm(list=objects())\nlibrary(\"tidyverse\")\nlibrary(\"INLA\")\nlibrary(\"sf\")\nlibrary(\"sp\")\n#devtools::install_github(\"progettopulvirus/rpulvinla\")\nlibrary(\"rpulvinla\")\noptions(warn=0)\n\nset.seed(1)\ninla.setOption(pardiso.license=\"~/pardiso/licenza.txt\")\n\n\n#############################\n###Regione e inquinante: fissare REGIONE e INQUINANTE\n#############################\nREGIONE<-\"lombardia\" #viene usato come suffisso per file output e per disegnare la regione nella mesh (solo disegnare, non per costruire la mesh)\nINQUINANTE<-\"no2\" #inquinante su cui lavorare \n\ncaricaDati(pacchetto=REGIONE,inquinante=INQUINANTE)->datiTemp\n\ndatiTemp %>% \n  filter(mm %in% seq(1,5) & yy==2020)->datiTemp #gennaio..maggio 2020 \n\n###############################\n###Trasformazione logaritmica della variabile target?\n###############################\nLOGARITMO<-c(TRUE,FALSE)[1] \n\n###############################\n###Quali variabili meteo? \n###############################\nMETEO<-c(\"t2m\",\"tp\",\"ptp\",\"sp\",\"wdir\",\"wspeed\",\"pblmax\",\"pblmin\",\"altitudedem\")\n\n#crea la formula di base con effetti fissi\nreduce(METEO,.f=str_c,sep=\"+\")->formula.regressori\npaste0(\"value~\",formula.regressori)->myformula\nas.formula(myformula)->myformula\nupdate(myformula,.~.+lockdown)->myformula\n\n\n###############################\n###Inserire le coordinate?\n###############################\nSCOORDX_KM<-c(TRUE,FALSE)[1] \nSCOORDY_KM<-c(TRUE,FALSE)[1] \n\nif(SCOORDX_KM) update(myformula,.~.+scoordx_km)->myformula\nif(SCOORDY_KM) update(myformula,.~.+scoordy_km)->myformula\n\n\n#####\n# iid su centraline (station_eu_code)?\n#####\nIID_STAZIONI<-c(TRUE,FALSE)[1] \nif(IID_STAZIONI) update(myformula,.~.+f(station_eu_code,model=\"iid\"))->myformula\n\n#####\n# Inserire trend temporale (esterno a spde)?\n#####\nDAY_TREND<-c(TRUE,FALSE)[1] #rw1 su giorno? ..usare variabile day\nif(DAY_TREND) update(myformula,.~.+f(day,model=\"rw1\"))->myformula\n\nWEEK_TREND<-c(TRUE,FALSE)[2] #rw1 su settimana? ... variabile week\nif(WEEK_TREND) update(myformula,.~.+f(week,model=\"rw1\"))->myformula\n\nWDAY_TREND<-c(TRUE,FALSE)[2] #rw1 su giorno della settimana, lun, mar..dom? ... variabile wday  \nif(WDAY_TREND) update(myformula,.~.+f(wday,model=\"rw1\"))->myformula\n\nMONTH_TREND<-c(TRUE,FALSE)[2] #trend (lineare) sul mese?...variabile mm  \nif(MONTH_TREND) update(myformula,.~.+mm)->myformula\n\n#############################\n###Salvare l'output del modello?\n#############################\nSAVE_OUTPUT<-c(TRUE,FALSE)[1] \n\n#############################\n###Plot della mesh?\n#############################\nDISEGNA_MESH<-c(TRUE,FALSE)[1]\n\n\n#dati meteo standardizzati\ndatiMeteo::meteo_standardizzati[,c(\"station_eu_code\",\"date\",\"coordx\",\"coordy\",METEO)] ->meteo\n\n#dati ok? verifichiamo\nwhich(is.na(datiTemp$pollutant_fk))->righe\nif(length(righe)) stop(\"pollutant_fk NA???\")\n\n#rpulvinla::prepara_dati, aggiunge la variabile banda per l'SPDE, fa il logaritmo della variabile value (l'inquinante) e aggiunge la variabile lockdown\nprepara_dati(.x = datiTemp,logaritmo = LOGARITMO,lockdown = TRUE,wday=WDAY_TREND,day=DAY_TREND,week=WEEK_TREND)->dati\n\n#Sia che lavoriamo con il logaritmo dell'inquinante, sia che lavoriamo con la variabile originale, nella creazione dello stack chiamiamo la variabile\n#target \"value\", in modo di avere un'unica interfaccia e toccare il meno possibile il codice\n\nif(LOGARITMO){\n  \n  dati$value<-dati$lvalue\n  dati$lvalue<-NULL\n  \n}#fine LOGARITMO  \n\n\n\n#associo dati meteo\nleft_join(dati,meteo)->dati\nrm(datiTemp)\n\n\n######################################\n#Per lo stack ho bisogno non delle coordinate del singolo punto, ma delle coordinate per singolo punto e per osservazione\n######################################\nst_as_sf(dati,coords = c(\"coordx\",\"coordy\"),crs=32632)->sfDati\n#rpulvinla::in_km\nin_km(sfDati)->sfDati\nas_tibble(st_coordinates(sfDati))->coordinateOsservazioni  #<- per lo stack \nnames(coordinateOsservazioni)<-c(\"coordx_km\",\"coordy_km\")\nbind_cols(sfDati[,c(\"station_eu_code\",\"date\")],coordinateOsservazioni)->coordinateOsservazioni\nst_geometry(coordinateOsservazioni)<-NULL\nrm(sfDati)\n\n\n##Coordinate standardizzate, se usate come predittori\ncoordinateOsservazioni %>%\n  mutate(scoordx_km=scale(coordx_km),\n         scoordy_km=scale(coordy_km))->coordinateOsservazioni\n\nleft_join(dati, coordinateOsservazioni %>%dplyr::select(station_eu_code,date,matches(\"^scoord[xy]_km\")))->dati\n\nsaveRDS(dati,glue::glue(\"dati_{REGIONE}.RDS\"))\n\n#Altre info\nunique(dati$station_eu_code)->CODICI\n\n#rpulvinla::numero_giorni\nnumero_giorni(dati)->n_giorni\n\n####Priors: AR1\nlist(prior=\"pc.cor0\",param=c(0.7,0.1),fixed=FALSE)->theta_hyper #<-------------- questa la prior usata ne modello per ar1\n####\n\n#16 luglio\nlist(theta = list(prior=\"pc.prec\", param=c(1,0.1)))->prec_hyper\n\n\n######################## FORMULA MODELLO: la parte random (spde, etc) va aggiunta prima del comando inla()\nterms(myformula)->termini\nattr(termini,which=\"term.labels\")->VARIABILI #<-mi serve nello stack  \n########################\n\n#Utilizzo coordinateOsservazioni per costruire la mesh: in questo caso ho bisogno di un punto per stazione (non per stazione E per osservazione)\ncoordinateOsservazioni[!duplicated(coordinateOsservazioni$station_eu_code),c(\"coordx_km\",\"coordy_km\")]->stazioni\nas.matrix(stazioni)->stazioni\n\n### Quale mesh?\nmesh<-inla.mesh.2d(loc =stazioni, max.edge = c(12.5,30),cutoff=5,min.angle = 30,offset=c(50,25))\nsaveRDS(mesh,glue::glue(\"mesh_{REGIONE}.RDS\"))\n\n\nif(DISEGNA_MESH){\n  \n  \n  eval(substitute(`::`(regioniItalia,regione),list(regione=REGIONE)))->shapeRegione #oggetto sf della regione (da sovrapporre su grafico mesh), non fondamentale\n  #`::`(\"regioniItalia\",\"toscana\")->shapeRegione \n  in_km(shapeRegione)->shapeRegione\n  \n  png(\"mesh.png\",width=1024,height=1024)\n  plot(mesh)\n  plot(st_as_sf(as.data.frame(stazioni),coords=c(\"coordx_km\",\"coordy_km\"),crs=st_crs(shapeRegione)),add=TRUE,bg=\"red\",pch=21)\n  plot(shapeRegione,add=TRUE,fill=\"transparent\",col=\"transparent\",lwd=2)  \n  dev.off()\n  \n}#fine DISEGNA_MESH\n\n\n######################## SPDE: Priors & more\ninla.spde2.pcmatern(mesh=mesh,alpha=2,constr=FALSE,prior.range = c(70,0.8),prior.sigma = c(0.7,0.2))->spde\nsaveRDS(spde,glue::glue(\"spde_{REGIONE}.RDS\"))\n\ninla.spde.make.index(name=\"i\",n.spde=spde$n.spde,n.group = n_giorni)->iset\nsaveRDS(iset,glue::glue(\"iset_{REGIONE}.RDS\"))\n\n\n#training\ninla.spde.make.A(mesh=mesh,loc=as.matrix(coordinateOsservazioni[,c(\"coordx_km\",\"coordy_km\")]),group =dati$banda,n.spde=spde$n.spde,n.group =n_giorni )->A.training\n#La variabile target si chiama value, che sia il logaritmo o no\nstr_remove(str_remove(attr(termini,\"term.labels\"),pattern=\",.+$\"),pattern=\"^f\\\\(\")->EFFETTI\n\ninla.stack(data=list(value=dati$value),A=list(A.training,1),effects=list(iset,dati[EFFETTI]),tag=\"training\")->stack.training\nsaveRDS(stack.training,glue::glue(\"stack.training_{REGIONE}.RDS\"))\n\n########################\n#Random effects\n########################\nupdate(myformula,.~.+f(i,model=spde,group = i.group,control.group = list(model=\"ar1\",hyper=list(theta1=list(prior=\"pc.prec\", param=c(1,0.1)),rho=theta_hyper))))->myformula\n\nprint(\"###############################\")\nprint(\"Formula finale modello:\")\nprint(myformula)\nprint(\"\\n\\n ATTENZIONE:\\n\")\nif(LOGARITMO) print(\"Nella formula value rappresenta il logaritmo della variabile target\\n\")\nprint(\"###############################\")\n\n\n######################## INLA Vai!\ninla(myformula,\n     data=inla.stack.data(stack.training,spde=spde),\n     family =\"gaussian\",\n     verbose=TRUE,\n     control.compute = list(openmp.strategy=\"pardiso.parallel\",cpo=TRUE,waic=TRUE,dic=TRUE,config=TRUE),\n     control.fixed = list(prec.intercept = 0.001, prec=1,mean.intercept=0),\n     control.predictor =list(A=inla.stack.A(stack.training),compute=TRUE) )->inla.out\n\n\nrmarkdown::render(\"analisi-covariate.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"analisi-residui-modello.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"risultati-spde.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"codice-modello-prima-versione.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\n\nif(SAVE_OUTPUT){\n\n  print(\"Salvataggio su disco di inla.out\")  \n  saveRDS(inla.out,glue::glue(\"result_{REGIONE}.RDS\"))\n  print(\"Fine scrittura su disco\")\n  \n}\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-codice-modello-no2-spde-con-iid/",
    "title": "Codice modello NO2: spde con iid",
    "description": "Codice del modello.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\nCaratteristiche modello:\niid su control group\nrw1 su giorni\niid su station_eu_code (codice centralina)\nCodice modello\n\n\n Scarica codice modello\n\n\nRisultati effetti fissi e random effects\n\n\n Scarica html\n\n\nRisultati residui\n\n\n Scarica html\n\n\nRisultati spde\n\n\n Scarica html\n\n\n\n\nrm(list=objects())\nlibrary(\"tidyverse\")\nlibrary(\"INLA\")\nlibrary(\"sf\")\nlibrary(\"sp\")\n#devtools::install_github(\"progettopulvirus/rpulvinla\")\nlibrary(\"rpulvinla\")\noptions(warn=0)\n\nset.seed(1)\ninla.setOption(pardiso.license=\"~/pardiso/licenza.txt\")\n\n\n#############################\n###Regione e inquinante: fissare REGIONE e INQUINANTE\n#############################\nREGIONE<-\"lombardia\" #viene usato come suffisso per file output e per disegnare la regione nella mesh (solo disegnare, non per costruire la mesh)\nINQUINANTE<-\"no2\" #inquinante su cui lavorare \n\ncaricaDati(pacchetto=REGIONE,inquinante=INQUINANTE)->datiTemp\n\ndatiTemp %>% \n  filter(mm %in% seq(1,5) & yy==2020)->datiTemp #gennaio..maggio 2020 \n\n###############################\n###Trasformazione logaritmica della variabile target?\n###############################\nLOGARITMO<-c(TRUE,FALSE)[1] \n\n###############################\n###Quali variabili meteo? \n###############################\nMETEO<-c(\"t2m\",\"tp\",\"ptp\",\"sp\",\"wdir\",\"wspeed\",\"pblmax\",\"pblmin\",\"altitudedem\")\n\n#crea la formula di base con effetti fissi\nreduce(METEO,.f=str_c,sep=\"+\")->formula.regressori\npaste0(\"value~\",formula.regressori)->myformula\nas.formula(myformula)->myformula\nupdate(myformula,.~.+lockdown)->myformula\n\n\n###############################\n###Inserire le coordinate?\n###############################\nSCOORDX_KM<-c(TRUE,FALSE)[1] \nSCOORDY_KM<-c(TRUE,FALSE)[1] \n\nif(SCOORDX_KM) update(myformula,.~.+scoordx_km)->myformula\nif(SCOORDY_KM) update(myformula,.~.+scoordy_km)->myformula\n\n\n#####\n# iid su centraline (station_eu_code)?\n#####\nIID_STAZIONI<-c(TRUE,FALSE)[1] \nif(IID_STAZIONI) update(myformula,.~.+f(station_eu_code,model=\"iid\"))->myformula\n\n#####\n# Inserire trend temporale (esterno a spde)?\n#####\nDAY_TREND<-c(TRUE,FALSE)[1] #rw1 su giorno? ..usare variabile day\nif(DAY_TREND) update(myformula,.~.+f(day,model=\"rw1\"))->myformula\n\nWEEK_TREND<-c(TRUE,FALSE)[2] #rw1 su settimana? ... variabile week\nif(WEEK_TREND) update(myformula,.~.+f(week,model=\"rw1\"))->myformula\n\nWDAY_TREND<-c(TRUE,FALSE)[2] #rw1 su giorno della settimana, lun, mar..dom? ... variabile wday  \nif(WDAY_TREND) update(myformula,.~.+f(wday,model=\"rw1\"))->myformula\n\nMONTH_TREND<-c(TRUE,FALSE)[2] #trend (lineare) sul mese?...variabile mm  \nif(MONTH_TREND) update(myformula,.~.+mm)->myformula\n\n#############################\n###Salvare l'output del modello?\n#############################\nSAVE_OUTPUT<-c(TRUE,FALSE)[1] \n\n#############################\n###Plot della mesh?\n#############################\nDISEGNA_MESH<-c(TRUE,FALSE)[1]\n\n\n#dati meteo standardizzati\ndatiMeteo::meteo_standardizzati[,c(\"station_eu_code\",\"date\",\"coordx\",\"coordy\",METEO)] ->meteo\n\n#dati ok? verifichiamo\nwhich(is.na(datiTemp$pollutant_fk))->righe\nif(length(righe)) stop(\"pollutant_fk NA???\")\n\n#rpulvinla::prepara_dati, aggiunge la variabile banda per l'SPDE, fa il logaritmo della variabile value (l'inquinante) e aggiunge la variabile lockdown\nprepara_dati(.x = datiTemp,logaritmo = LOGARITMO,lockdown = TRUE,wday=WDAY_TREND,day=DAY_TREND,week=WEEK_TREND)->dati\n\n#Sia che lavoriamo con il logaritmo dell'inquinante, sia che lavoriamo con la variabile originale, nella creazione dello stack chiamiamo la variabile\n#target \"value\", in modo di avere un'unica interfaccia e toccare il meno possibile il codice\n\nif(LOGARITMO){\n  \n  dati$value<-dati$lvalue\n  dati$lvalue<-NULL\n  \n}#fine LOGARITMO  \n\n\n\n#associo dati meteo\nleft_join(dati,meteo)->dati\nrm(datiTemp)\n\n\n######################################\n#Per lo stack ho bisogno non delle coordinate del singolo punto, ma delle coordinate per singolo punto e per osservazione\n######################################\nst_as_sf(dati,coords = c(\"coordx\",\"coordy\"),crs=32632)->sfDati\n#rpulvinla::in_km\nin_km(sfDati)->sfDati\nas_tibble(st_coordinates(sfDati))->coordinateOsservazioni  #<- per lo stack \nnames(coordinateOsservazioni)<-c(\"coordx_km\",\"coordy_km\")\nbind_cols(sfDati[,c(\"station_eu_code\",\"date\")],coordinateOsservazioni)->coordinateOsservazioni\nst_geometry(coordinateOsservazioni)<-NULL\nrm(sfDati)\n\n\n##Coordinate standardizzate, se usate come predittori\ncoordinateOsservazioni %>%\n  mutate(scoordx_km=scale(coordx_km),\n         scoordy_km=scale(coordy_km))->coordinateOsservazioni\n\nleft_join(dati, coordinateOsservazioni %>%dplyr::select(station_eu_code,date,matches(\"^scoord[xy]_km\")))->dati\n\nsaveRDS(dati,glue::glue(\"dati_{REGIONE}.RDS\"))\n\n#Altre info\nunique(dati$station_eu_code)->CODICI\n\n#rpulvinla::numero_giorni\nnumero_giorni(dati)->n_giorni\n\n####Priors: AR1\nlist(prior=\"pc.cor0\",param=c(0.7,0.1),fixed=FALSE)->theta_hyper #<-------------- questa la prior usata ne modello per ar1\n####\n\n#16 luglio\nlist(theta = list(prior=\"pc.prec\", param=c(1,0.1)))->prec_hyper\n\n\n######################## FORMULA MODELLO: la parte random (spde, etc) va aggiunta prima del comando inla()\nterms(myformula)->termini\nattr(termini,which=\"term.labels\")->VARIABILI #<-mi serve nello stack  \n########################\n\n#Utilizzo coordinateOsservazioni per costruire la mesh: in questo caso ho bisogno di un punto per stazione (non per stazione E per osservazione)\ncoordinateOsservazioni[!duplicated(coordinateOsservazioni$station_eu_code),c(\"coordx_km\",\"coordy_km\")]->stazioni\nas.matrix(stazioni)->stazioni\n\n### Quale mesh?\nmesh<-inla.mesh.2d(loc =stazioni, max.edge = c(12.5,30),cutoff=5,min.angle = 30,offset=c(50,25))\nsaveRDS(mesh,glue::glue(\"mesh_{REGIONE}.RDS\"))\n\n\nif(DISEGNA_MESH){\n  \n  \n  eval(substitute(`::`(regioniItalia,regione),list(regione=REGIONE)))->shapeRegione #oggetto sf della regione (da sovrapporre su grafico mesh), non fondamentale\n  #`::`(\"regioniItalia\",\"toscana\")->shapeRegione \n  in_km(shapeRegione)->shapeRegione\n  \n  png(\"mesh.png\",width=1024,height=1024)\n  plot(mesh)\n  plot(st_as_sf(as.data.frame(stazioni),coords=c(\"coordx_km\",\"coordy_km\"),crs=st_crs(shapeRegione)),add=TRUE,bg=\"red\",pch=21)\n  plot(shapeRegione,add=TRUE,fill=\"transparent\",col=\"transparent\",lwd=2)  \n  dev.off()\n  \n}#fine DISEGNA_MESH\n\n\n######################## SPDE: Priors & more\ninla.spde2.pcmatern(mesh=mesh,alpha=2,constr=FALSE,prior.range = c(70,0.8),prior.sigma = c(0.7,0.2))->spde\nsaveRDS(spde,glue::glue(\"spde_{REGIONE}.RDS\"))\n\ninla.spde.make.index(name=\"i\",n.spde=spde$n.spde,n.group = n_giorni)->iset\nsaveRDS(iset,glue::glue(\"iset_{REGIONE}.RDS\"))\n\n\n#training\ninla.spde.make.A(mesh=mesh,loc=as.matrix(coordinateOsservazioni[,c(\"coordx_km\",\"coordy_km\")]),group =dati$banda,n.spde=spde$n.spde,n.group =n_giorni )->A.training\n#La variabile target si chiama value, che sia il logaritmo o no\nstr_remove(str_remove(attr(termini,\"term.labels\"),pattern=\",.+$\"),pattern=\"^f\\\\(\")->EFFETTI\n\ninla.stack(data=list(value=dati$value),A=list(A.training,1),effects=list(iset,dati[EFFETTI]),tag=\"training\")->stack.training\nsaveRDS(stack.training,glue::glue(\"stack.training_{REGIONE}.RDS\"))\n\n########################\n#Random effects\n########################\nupdate(myformula,.~.+f(i,model=spde,group = i.group,control.group = list(model=\"iid\")))->myformula\n\nprint(\"###############################\")\nprint(\"Formula finale modello:\")\nprint(myformula)\nprint(\"\\n\\n ATTENZIONE:\\n\")\nif(LOGARITMO) print(\"Nella formula value rappresenta il logaritmo della variabile target\\n\")\nprint(\"###############################\")\n\n\n######################## INLA Vai!\ninla(myformula,\n     data=inla.stack.data(stack.training,spde=spde),\n     family =\"gaussian\",\n     verbose=TRUE,\n     control.compute = list(openmp.strategy=\"pardiso.parallel\",cpo=TRUE,waic=TRUE,dic=TRUE,config=TRUE),\n     control.fixed = list(prec.intercept = 0.001, prec=1,mean.intercept=0),\n     control.predictor =list(A=inla.stack.A(stack.training),compute=TRUE) )->inla.out\n\n\nrmarkdown::render(\"analisi-covariate.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"analisi-residui-modello.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"risultati-spde.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"codice-modello-prima-versione.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\n\nif(SAVE_OUTPUT){\n\n  print(\"Salvataggio su disco di inla.out\")  \n  saveRDS(inla.out,glue::glue(\"result_{REGIONE}.RDS\"))\n  print(\"Fine scrittura su disco\")\n  \n}\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-22T23:21:45+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-codice-modello-no2-toscana/",
    "title": "Codice modello NO2, Toscana",
    "description": "Modello con ar1 su spde, iid su stattion_eu_code, rw1 su wday e rw1 su week.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\nCaratteristiche modello:\niid su control group\nrw1 su wday\nrw1 su week\niid su station_eu_code (codice centralina)\nCodice modello\n\n\n Scarica codice modello\n\n\nRisultati effetti fissi e random effects\n\n\n Scarica html\n\n\nRisultati residui\n\n\n Scarica html\n\n\nRisultati spde\n\n\n Scarica html\n\n\n\n\nrm(list=objects())\nlibrary(\"tidyverse\")\nlibrary(\"INLA\")\nlibrary(\"sf\")\nlibrary(\"sp\")\n#devtools::install_github(\"progettopulvirus/rpulvinla\")\nlibrary(\"rpulvinla\")\noptions(warn=0)\n\nset.seed(1)\ninla.setOption(pardiso.license=\"~/pardiso/licenza.txt\")\n\n\n#############################\n###Regione e inquinante: fissare REGIONE e INQUINANTE\n#############################\nREGIONE<-\"toscana\" #viene usato come suffisso per file output e per disegnare la regione nella mesh (solo disegnare, non per costruire la mesh)\nINQUINANTE<-\"pm10\" #inquinante su cui lavorare \n\ncaricaDati(pacchetto=REGIONE,inquinante=INQUINANTE)->datiTemp\n\ndatiTemp %>% \n  filter(mm %in% seq(1,5) & yy==2020)->datiTemp #gennaio..maggio 2020 \n\n###############################\n###Trasformazione logaritmica della variabile target?\n###############################\nLOGARITMO<-c(TRUE,FALSE)[1] \n\n###############################\n###Quali variabili meteo? \n###############################\nMETEO<-c(\"t2m\",\"tp\",\"ptp\",\"sp\",\"wdir\",\"wspeed\",\"pblmax\",\"pblmin\",\"altitudedem\")\n\n#crea la formula di base con effetti fissi\nreduce(METEO,.f=str_c,sep=\"+\")->formula.regressori\npaste0(\"value~\",formula.regressori)->myformula\nas.formula(myformula)->myformula\nupdate(myformula,.~.+lockdown)->myformula\n\n\n###############################\n###Inserire le coordinate?\n###############################\nSCOORDX_KM<-c(TRUE,FALSE)[1] \nSCOORDY_KM<-c(TRUE,FALSE)[1] \n\nif(SCOORDX_KM) update(myformula,.~.+scoordx_km)->myformula\nif(SCOORDY_KM) update(myformula,.~.+scoordy_km)->myformula\n\n\n#####\n# iid su centraline (station_eu_code)?\n#####\nIID_STAZIONI<-c(TRUE,FALSE)[1] \nif(IID_STAZIONI) update(myformula,.~.+f(station_eu_code,model=\"iid\"))->myformula\n\n#####\n# Inserire trend temporale (esterno a spde)?\n#####\nDAY_TREND<-c(TRUE,FALSE)[2] #rw1 su giorno? ..usare variabile day\nif(DAY_TREND) update(myformula,.~.+f(day,model=\"rw1\"))->myformula\n\nWEEK_TREND<-c(TRUE,FALSE)[1] #rw1 su settimana? ... variabile week\nif(WEEK_TREND) update(myformula,.~.+f(week,model=\"rw1\"))->myformula\n\nWDAY_TREND<-c(TRUE,FALSE)[1] #rw1 su giorno della settimana, lun, mar..dom? ... variabile wday  \nif(WDAY_TREND) update(myformula,.~.+f(wday,model=\"rw1\"))->myformula\n\nMONTH_TREND<-c(TRUE,FALSE)[2] #trend (lineare) sul mese?...variabile mm  \nif(MONTH_TREND) update(myformula,.~.+mm)->myformula\n\n#############################\n###Salvare l'output del modello?\n#############################\nSAVE_OUTPUT<-c(TRUE,FALSE)[1] \n\n#############################\n###Plot della mesh?\n#############################\nDISEGNA_MESH<-c(TRUE,FALSE)[1]\n\n\n#dati meteo standardizzati\ndatiMeteo::meteo_standardizzati[,c(\"station_eu_code\",\"date\",\"coordx\",\"coordy\",METEO)] ->meteo\n\n#dati ok? verifichiamo\nwhich(is.na(datiTemp$pollutant_fk))->righe\nif(length(righe)) stop(\"pollutant_fk NA???\")\n\n#rpulvinla::prepara_dati, aggiunge la variabile banda per l'SPDE, fa il logaritmo della variabile value (l'inquinante) e aggiunge la variabile lockdown\nprepara_dati(.x = datiTemp,logaritmo = LOGARITMO,lockdown = TRUE,wday=WDAY_TREND,day=DAY_TREND,week=WEEK_TREND)->dati\n\n#Sia che lavoriamo con il logaritmo dell'inquinante, sia che lavoriamo con la variabile originale, nella creazione dello stack chiamiamo la variabile\n#target \"value\", in modo di avere un'unica interfaccia e toccare il meno possibile il codice\n\nif(LOGARITMO){\n  \n  dati$value<-dati$lvalue\n  dati$lvalue<-NULL\n  \n}#fine LOGARITMO  \n\n\n\n#associo dati meteo\nleft_join(dati,meteo)->dati\nrm(datiTemp)\n\n\n######################################\n#Per lo stack ho bisogno non delle coordinate del singolo punto, ma delle coordinate per singolo punto e per osservazione\n######################################\nst_as_sf(dati,coords = c(\"coordx\",\"coordy\"),crs=32632)->sfDati\n#rpulvinla::in_km\nin_km(sfDati)->sfDati\nas_tibble(st_coordinates(sfDati))->coordinateOsservazioni  #<- per lo stack \nnames(coordinateOsservazioni)<-c(\"coordx_km\",\"coordy_km\")\nbind_cols(sfDati[,c(\"station_eu_code\",\"date\")],coordinateOsservazioni)->coordinateOsservazioni\nst_geometry(coordinateOsservazioni)<-NULL\nrm(sfDati)\n\n\n##Coordinate standardizzate, se usate come predittori\ncoordinateOsservazioni %>%\n  mutate(scoordx_km=scale(coordx_km),\n         scoordy_km=scale(coordy_km))->coordinateOsservazioni\n\nleft_join(dati, coordinateOsservazioni %>%dplyr::select(station_eu_code,date,matches(\"^scoord[xy]_km\")))->dati\n\nsaveRDS(dati,glue::glue(\"dati_{REGIONE}.RDS\"))\n\n#Altre info\nunique(dati$station_eu_code)->CODICI\n\n#rpulvinla::numero_giorni\nnumero_giorni(dati)->n_giorni\n\n####Priors: AR1\nlist(prior=\"pc.cor0\",param=c(0.7,0.1),fixed=FALSE)->theta_hyper #<-------------- questa la prior usata ne modello per ar1\n####\n\n#16 luglio\nlist(theta = list(prior=\"pc.prec\", param=c(1,0.1)))->prec_hyper\n\n\n######################## FORMULA MODELLO: la parte random (spde, etc) va aggiunta prima del comando inla()\nterms(myformula)->termini\nattr(termini,which=\"term.labels\")->VARIABILI #<-mi serve nello stack  \n########################\n\n#Utilizzo coordinateOsservazioni per costruire la mesh: in questo caso ho bisogno di un punto per stazione (non per stazione E per osservazione)\ncoordinateOsservazioni[!duplicated(coordinateOsservazioni$station_eu_code),c(\"coordx_km\",\"coordy_km\")]->stazioni\nas.matrix(stazioni)->stazioni\n\n### Quale mesh?\nmesh<-inla.mesh.2d(loc =stazioni, max.edge = c(12.5,30),cutoff=5,min.angle = 30,offset=c(50,25))\nsaveRDS(mesh,glue::glue(\"mesh_{REGIONE}.RDS\"))\n\n\nif(DISEGNA_MESH){\n  \n  \n  eval(substitute(`::`(regioniItalia,regione),list(regione=REGIONE)))->shapeRegione #oggetto sf della regione (da sovrapporre su grafico mesh), non fondamentale\n  #`::`(\"regioniItalia\",\"toscana\")->shapeRegione \n  in_km(shapeRegione)->shapeRegione\n  \n  png(\"mesh.png\",width=1024,height=1024)\n  plot(mesh)\n  plot(st_as_sf(as.data.frame(stazioni),coords=c(\"coordx_km\",\"coordy_km\"),crs=st_crs(shapeRegione)),add=TRUE,bg=\"red\",pch=21)\n  plot(shapeRegione,add=TRUE,fill=\"transparent\",col=\"transparent\",lwd=2)  \n  dev.off()\n  \n}#fine DISEGNA_MESH\n\n\n######################## SPDE: Priors & more\ninla.spde2.pcmatern(mesh=mesh,alpha=2,constr=FALSE,prior.range = c(70,0.8),prior.sigma = c(0.7,0.2))->spde\nsaveRDS(spde,glue::glue(\"spde_{REGIONE}.RDS\"))\n\ninla.spde.make.index(name=\"i\",n.spde=spde$n.spde,n.group = n_giorni)->iset\nsaveRDS(iset,glue::glue(\"iset_{REGIONE}.RDS\"))\n\n\n#training\ninla.spde.make.A(mesh=mesh,loc=as.matrix(coordinateOsservazioni[,c(\"coordx_km\",\"coordy_km\")]),group =dati$banda,n.spde=spde$n.spde,n.group =n_giorni )->A.training\n#La variabile target si chiama value, che sia il logaritmo o no\nstr_remove(str_remove(attr(termini,\"term.labels\"),pattern=\",.+$\"),pattern=\"^f\\\\(\")->EFFETTI\n\ninla.stack(data=list(value=dati$value),A=list(A.training,1),effects=list(iset,dati[EFFETTI]),tag=\"training\")->stack.training\nsaveRDS(stack.training,glue::glue(\"stack.training_{REGIONE}.RDS\"))\n\n########################\n#Random effects\n########################\nupdate(myformula,.~.+f(i,model=spde,group = i.group,control.group = list(model=\"ar1\",hyper=list(theta1=list(prior=\"pc.prec\", param=c(1,0.1)),rho=theta_hyper))))->myformula\n\nprint(\"###############################\")\nprint(\"Formula finale modello:\")\nprint(myformula)\nprint(\"\\n\\n ATTENZIONE:\\n\")\nif(LOGARITMO) print(\"Nella formula value rappresenta il logaritmo della variabile target\\n\")\nprint(\"###############################\")\n\n\n######################## INLA Vai!\ninla(myformula,\n     data=inla.stack.data(stack.training,spde=spde),\n     family =\"gaussian\",\n     verbose=TRUE,\n     control.compute = list(openmp.strategy=\"pardiso.parallel\",cpo=TRUE,waic=TRUE,dic=TRUE,config=TRUE),\n     control.fixed = list(prec.intercept = 0.001, prec=1,mean.intercept=0),\n     control.predictor =list(A=inla.stack.A(stack.training),compute=TRUE) )->inla.out\n\n\nrmarkdown::render(\"analisi-covariate.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"analisi-residui-modello.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"risultati-spde.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"codice-modello-prima-versione.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\n\nif(SAVE_OUTPUT){\n\n  print(\"Salvataggio su disco di inla.out\")  \n  saveRDS(inla.out,glue::glue(\"result_{REGIONE}.RDS\"))\n  print(\"Fine scrittura su disco\")\n  \n}\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-22T23:33:48+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-22-codice-modello-pm10-spde-con-ar1-rw1-su-day/",
    "title": "Codice modello PM10: spde con ar1, rw1 su day",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "guidofioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-22",
    "categories": [],
    "contents": "\nCaratteristiche modello:\nar1 su control group\nrw1 su giorni\niid su station_eu_code (codice centralina)\nCodice modello\n\n\n Scarica codice modello\n\n\nRisultati effetti fissi e random effects\n\n\n Scarica html\n\n\nRisultati residui\n\n\n Scarica html\n\n\nRisultati spde\n\n\n Scarica html\n\n\n\n\nrm(list=objects())\nlibrary(\"tidyverse\")\nlibrary(\"INLA\")\nlibrary(\"sf\")\nlibrary(\"sp\")\n#devtools::install_github(\"progettopulvirus/rpulvinla\")\nlibrary(\"rpulvinla\")\noptions(warn=0)\n\nset.seed(1)\ninla.setOption(pardiso.license=\"~/pardiso/licenza.txt\")\n\n\n#############################\n###Regione e inquinante: fissare REGIONE e INQUINANTE\n#############################\nREGIONE<-\"lombardia\" #viene usato come suffisso per file output e per disegnare la regione nella mesh (solo disegnare, non per costruire la mesh)\nINQUINANTE<-\"pm10\" #inquinante su cui lavorare \n\ncaricaDati(pacchetto=REGIONE,inquinante=INQUINANTE)->datiTemp\n\ndatiTemp %>% \n  filter(mm %in% seq(1,5) & yy==2020)->datiTemp #gennaio..maggio 2020 \n\n###############################\n###Trasformazione logaritmica della variabile target?\n###############################\nLOGARITMO<-c(TRUE,FALSE)[1] \n\n###############################\n###Quali variabili meteo? \n###############################\nMETEO<-c(\"t2m\",\"tp\",\"ptp\",\"sp\",\"wdir\",\"wspeed\",\"pblmax\",\"pblmin\",\"altitudedem\")\n\n#crea la formula di base con effetti fissi\nreduce(METEO,.f=str_c,sep=\"+\")->formula.regressori\npaste0(\"value~\",formula.regressori)->myformula\nas.formula(myformula)->myformula\nupdate(myformula,.~.+lockdown)->myformula\n\n\n###############################\n###Inserire le coordinate?\n###############################\nSCOORDX_KM<-c(TRUE,FALSE)[1] \nSCOORDY_KM<-c(TRUE,FALSE)[1] \n\nif(SCOORDX_KM) update(myformula,.~.+scoordx_km)->myformula\nif(SCOORDY_KM) update(myformula,.~.+scoordy_km)->myformula\n\n\n#####\n# iid su centraline (station_eu_code)?\n#####\nIID_STAZIONI<-c(TRUE,FALSE)[1] \nif(IID_STAZIONI) update(myformula,.~.+f(station_eu_code,model=\"iid\"))->myformula\n\n#####\n# Inserire trend temporale (esterno a spde)?\n#####\nDAY_TREND<-c(TRUE,FALSE)[1] #rw1 su giorno? ..usare variabile day\nif(DAY_TREND) update(myformula,.~.+f(day,model=\"rw1\"))->myformula\n\nWEEK_TREND<-c(TRUE,FALSE)[2] #rw1 su settimana? ... variabile week\nif(WEEK_TREND) update(myformula,.~.+f(week,model=\"rw1\"))->myformula\n\nWDAY_TREND<-c(TRUE,FALSE)[2] #rw1 su giorno della settimana, lun, mar..dom? ... variabile wday  \nif(WDAY_TREND) update(myformula,.~.+f(wday,model=\"rw1\"))->myformula\n\nMONTH_TREND<-c(TRUE,FALSE)[2] #trend (lineare) sul mese?...variabile mm  \nif(MONTH_TREND) update(myformula,.~.+mm)->myformula\n\n#############################\n###Salvare l'output del modello?\n#############################\nSAVE_OUTPUT<-c(TRUE,FALSE)[1] \n\n#############################\n###Plot della mesh?\n#############################\nDISEGNA_MESH<-c(TRUE,FALSE)[1]\n\n\n#dati meteo standardizzati\ndatiMeteo::meteo_standardizzati[,c(\"station_eu_code\",\"date\",\"coordx\",\"coordy\",METEO)] ->meteo\n\n#dati ok? verifichiamo\nwhich(is.na(datiTemp$pollutant_fk))->righe\nif(length(righe)) stop(\"pollutant_fk NA???\")\n\n#rpulvinla::prepara_dati, aggiunge la variabile banda per l'SPDE, fa il logaritmo della variabile value (l'inquinante) e aggiunge la variabile lockdown\nprepara_dati(.x = datiTemp,logaritmo = LOGARITMO,lockdown = TRUE,wday=WDAY_TREND,day=DAY_TREND,week=WEEK_TREND)->dati\n\n#Sia che lavoriamo con il logaritmo dell'inquinante, sia che lavoriamo con la variabile originale, nella creazione dello stack chiamiamo la variabile\n#target \"value\", in modo di avere un'unica interfaccia e toccare il meno possibile il codice\n\nif(LOGARITMO){\n  \n  dati$value<-dati$lvalue\n  dati$lvalue<-NULL\n  \n}#fine LOGARITMO  \n\n\n\n#associo dati meteo\nleft_join(dati,meteo)->dati\nrm(datiTemp)\n\n\n######################################\n#Per lo stack ho bisogno non delle coordinate del singolo punto, ma delle coordinate per singolo punto e per osservazione\n######################################\nst_as_sf(dati,coords = c(\"coordx\",\"coordy\"),crs=32632)->sfDati\n#rpulvinla::in_km\nin_km(sfDati)->sfDati\nas_tibble(st_coordinates(sfDati))->coordinateOsservazioni  #<- per lo stack \nnames(coordinateOsservazioni)<-c(\"coordx_km\",\"coordy_km\")\nbind_cols(sfDati[,c(\"station_eu_code\",\"date\")],coordinateOsservazioni)->coordinateOsservazioni\nst_geometry(coordinateOsservazioni)<-NULL\nrm(sfDati)\n\n\n##Coordinate standardizzate, se usate come predittori\ncoordinateOsservazioni %>%\n  mutate(scoordx_km=scale(coordx_km),\n         scoordy_km=scale(coordy_km))->coordinateOsservazioni\n\nleft_join(dati, coordinateOsservazioni %>%dplyr::select(station_eu_code,date,matches(\"^scoord[xy]_km\")))->dati\n\nsaveRDS(dati,glue::glue(\"dati_{REGIONE}.RDS\"))\n\n#Altre info\nunique(dati$station_eu_code)->CODICI\n\n#rpulvinla::numero_giorni\nnumero_giorni(dati)->n_giorni\n\n####Priors: AR1\nlist(prior=\"pc.cor0\",param=c(0.7,0.1),fixed=FALSE)->theta_hyper #<-------------- questa la prior usata ne modello per ar1\n####\n\n#16 luglio\nlist(theta = list(prior=\"pc.prec\", param=c(1,0.1)))->prec_hyper\n\n\n######################## FORMULA MODELLO: la parte random (spde, etc) va aggiunta prima del comando inla()\nterms(myformula)->termini\nattr(termini,which=\"term.labels\")->VARIABILI #<-mi serve nello stack  \n########################\n\n#Utilizzo coordinateOsservazioni per costruire la mesh: in questo caso ho bisogno di un punto per stazione (non per stazione E per osservazione)\ncoordinateOsservazioni[!duplicated(coordinateOsservazioni$station_eu_code),c(\"coordx_km\",\"coordy_km\")]->stazioni\nas.matrix(stazioni)->stazioni\n\n### Quale mesh?\nmesh<-inla.mesh.2d(loc =stazioni, max.edge = c(12.5,30),cutoff=5,min.angle = 30,offset=c(50,25))\nsaveRDS(mesh,glue::glue(\"mesh_{REGIONE}.RDS\"))\n\n\nif(DISEGNA_MESH){\n  \n  \n  eval(substitute(`::`(regioniItalia,regione),list(regione=REGIONE)))->shapeRegione #oggetto sf della regione (da sovrapporre su grafico mesh), non fondamentale\n  #`::`(\"regioniItalia\",\"toscana\")->shapeRegione \n  in_km(shapeRegione)->shapeRegione\n  \n  png(\"mesh.png\",width=1024,height=1024)\n  plot(mesh)\n  plot(st_as_sf(as.data.frame(stazioni),coords=c(\"coordx_km\",\"coordy_km\"),crs=st_crs(shapeRegione)),add=TRUE,bg=\"red\",pch=21)\n  plot(shapeRegione,add=TRUE,fill=\"transparent\",col=\"transparent\",lwd=2)  \n  dev.off()\n  \n}#fine DISEGNA_MESH\n\n\n######################## SPDE: Priors & more\ninla.spde2.pcmatern(mesh=mesh,alpha=2,constr=FALSE,prior.range = c(70,0.8),prior.sigma = c(0.7,0.2))->spde\nsaveRDS(spde,glue::glue(\"spde_{REGIONE}.RDS\"))\n\ninla.spde.make.index(name=\"i\",n.spde=spde$n.spde,n.group = n_giorni)->iset\nsaveRDS(iset,glue::glue(\"iset_{REGIONE}.RDS\"))\n\n\n#training\ninla.spde.make.A(mesh=mesh,loc=as.matrix(coordinateOsservazioni[,c(\"coordx_km\",\"coordy_km\")]),group =dati$banda,n.spde=spde$n.spde,n.group =n_giorni )->A.training\n#La variabile target si chiama value, che sia il logaritmo o no\nstr_remove(str_remove(attr(termini,\"term.labels\"),pattern=\",.+$\"),pattern=\"^f\\\\(\")->EFFETTI\n\ninla.stack(data=list(value=dati$value),A=list(A.training,1),effects=list(iset,dati[EFFETTI]),tag=\"training\")->stack.training\nsaveRDS(stack.training,glue::glue(\"stack.training_{REGIONE}.RDS\"))\n\n########################\n#Random effects\n########################\nupdate(myformula,.~.+f(i,model=spde,group = i.group,control.group = list(model=\"ar1\",hyper=list(theta1=list(prior=\"pc.prec\", param=c(1,0.1)),rho=theta_hyper))))->myformula\n\nprint(\"###############################\")\nprint(\"Formula finale modello:\")\nprint(myformula)\nprint(\"\\n\\n ATTENZIONE:\\n\")\nif(LOGARITMO) print(\"Nella formula value rappresenta il logaritmo della variabile target\\n\")\nprint(\"###############################\")\n\n\n######################## INLA Vai!\ninla(myformula,\n     data=inla.stack.data(stack.training,spde=spde),\n     family =\"gaussian\",\n     verbose=TRUE,\n     control.compute = list(openmp.strategy=\"pardiso.parallel\",cpo=TRUE,waic=TRUE,dic=TRUE,config=TRUE),\n     control.fixed = list(prec.intercept = 0.001, prec=1,mean.intercept=0),\n     control.predictor =list(A=inla.stack.A(stack.training),compute=TRUE) )->inla.out\n\n\nrmarkdown::render(\"analisi-covariate.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"analisi-residui-modello.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"risultati-spde.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\nrmarkdown::render(\"codice-modello-prima-versione.Rmd\",output_format = \"html_document\",params = list(regione=REGIONE,inquinante=INQUINANTE))\n\nif(SAVE_OUTPUT){\n\n  print(\"Salvataggio su disco di inla.out\")  \n  saveRDS(inla.out,glue::glue(\"result_{REGIONE}.RDS\"))\n  print(\"Fine scrittura su disco\")\n  \n}\n\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-22T23:21:45+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-16-mesh-lombardia/",
    "title": "Mesh Lombardia",
    "description": "Una possibile mesh per la Lombardia.",
    "author": [
      {
        "name": "Guido Fioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-16",
    "categories": [],
    "contents": "\nSintesi distanze punti stazione\n\n\nSkim summary statistics\n\n── Variable type:numeric ─────────────────────────────────────────────\n        variable missing complete    n  mean    sd   p0   p25   p50\n vettoreDistanze       0     1176 1176 71.29 39.47 0.79 42.09 64.44\n   p75   p100     hist\n 94.15 204.97 ▃▇▇▅▃▂▁▁\n\nMesh\n\n\n########################\n#Mesh    \n########################\ninla.nonconvex.hull(points =  coordinateStazioni,convex = 60,concave=90)->terraferma\nmesh<-inla.mesh.2d(boundary=terraferma, max.edge = c(10,30),cutoff=8,min.angle = 25,offset=c(5,20))\n\n\n\n\n\n\n\n\n########################\n#Mesh    \n########################\nmesh<-inla.mesh.2d(loc =coordinateStazioni, max.edge = c(12.5,30),cutoff=5,min.angle = 30,offset=c(50,25))\n\n\n\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-16-mesh-lombardia/mesh-lombardia_files/figure-html5/plotMesh-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-15-analisi-no2-vs-variabili-meteo/",
    "title": "Analisi NO2 vs variabili meteo",
    "description": "Studio di correlazioni e scatterplots tra NO2 e le variabili meteo derivate da ERA5.\nPer i parametri metereologici fare riferimento a https://progettopulvirus.github.io/pulviruS/parametri.html",
    "author": [
      {
        "name": "Maria Gabriella Villani",
        "url": {}
      }
    ],
    "date": "2021-02-15",
    "categories": [],
    "contents": "\nNumero stazioni: 47\nCorrelatione variabili meteo vs no2\n\n\n\nCorrelazioni complessive\n\n\n\nCorrelazioni per anno\nA titolo di esempio: 2013, 2019\n\n\n\nCorrelazioni per tipo di stazione_zona\n\n\n\nStudio scatterplots & correlazioni\n\n\n\nScatterplots temperature-radiazione\n\n\n\nScatterplots precipitazione, umidità, surface pressure\n\n\n\nScatterplots pbl\n\n\n\nScatterplots wind\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-15-analisi-no2-vs-variabili-meteo/analisi-no2-vs-variabili-meteo_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-15-analisi-pm10-vs-variabili-meteo/",
    "title": "Analisi PM10 vs variabili meteo",
    "description": "Studio di correlazioni e scatterplots tra PM10 e le variabili meteo derivate da ERA5.\nPer i parametri metereologici fare riferimento a https://progettopulvirus.github.io/pulviruS/parametri.html",
    "author": [
      {
        "name": "Maria Gabriella Villani",
        "url": {}
      }
    ],
    "date": "2021-02-15",
    "categories": [],
    "contents": "\nNumero stazioni: 49\nCorrelatione variabili meteo vs pm10\n\n\n\nCorrelazioni complessive\n\n\n\nCorrelazioni per anno\nA titolo di esempio: 2013, 2019\n\n\n\nCorrelazioni per tipo di stazione_zona\n\n\n\nStudio scatterplots & correlazioni\n\n\n\nScatterplots temperature-radiazione\n\n\n\nScatterplots precipitazione, umidità, surface pressure\n\n\n\nScatterplots pbl\n\n\n\nScatterplots wind\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-15-analisi-pm10-vs-variabili-meteo/analisi-pm10-vs-variabili-meteo_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-10-analisi-pm10-lombardia/",
    "title": "Analisi PM10 Lombardia",
    "description": "Descrizione PM10, serie 2013-2020.",
    "author": [
      {
        "name": "Guido Fioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-10",
    "categories": [],
    "contents": "\n\n\n\nNumero stazioni: 49\n\n\n\nNumero di osservazioni per anno per stazione\nTutte le serie coprono il periodo 2013-2020 (ad eccezione di una stazione).\n\n\n\nDistibuzione pm10\n\nSkim summary statistics\n n obs: 70507 \n n variables: 5 \n group variables:  \n\n── Variable type:factor ──────────────────────────────────────────────\n  variable missing complete     n n_unique\n tipo_zona       0    70507 70507        3\n                         top_counts ordered\n U: 50207, S: 14500, R: 5800, NA: 0   FALSE\n\n── Variable type:numeric ─────────────────────────────────────────────\n variable missing complete     n    mean    sd   p0     p25     p50\n       dd       0    70507 70507   15.62  8.74    1    8      16   \n       mm       0    70507 70507    3.51  1.71    1    2       4   \n    value    2775    67732 70507   32.11 21.87    0   16.95   26.29\n       yy       0    70507 70507 2016.52  2.29 2013 2015    2017   \n     p75   p100     hist\n   23      31   ▇▇▇▇▆▇▇▆\n    5       6   ▇▇▁▇▇▁▇▇\n   41.38  263.5 ▇▃▁▁▁▁▁▁\n 2019    2020   ▇▇▇▇▇▇▇▇\n\nDistibuzione pm10 per tipo di zona (Urban, Suburban, Rural)\n\nSkim summary statistics\n n obs: 70507 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd p0   p25  p50\n         R    value     257     5543  5800 29.35 21.1   0 14.94 24.4\n         S    value     615    13885 14500 32.86 21.57  0 17.6  27.2\n         U    value    1903    48304 50207 32.22 22.02  0 17    26.2\n   p75   p100     hist\n 38.4  165.7  ▇▇▂▁▁▁▁▁\n 42.3  263.5  ▇▃▁▁▁▁▁▁\n 41.49 238.96 ▇▅▁▁▁▁▁▁\n\n\n\n\n\nDistribuzione mensile pm10\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-10-analisi-pm10-lombardia/analisi-pm10-lombardia_files/figure-html5/mappaAra-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-11-analisi-no2-lombardia/",
    "title": "Analisi NO2 Lombardia",
    "description": "Descrizione NO2, serie 2013-2020.",
    "author": [
      {
        "name": "Guido Fioravanti",
        "url": {}
      }
    ],
    "date": "2021-02-10",
    "categories": [],
    "contents": "\n\n\n\nNumero stazioni: 47\n\n\n\nNumero di osservazioni per anno per stazione\nTutte le serie coprono il periodo 2013-2020 (ad eccezione di una stazione).\n\n\n\nDistibuzione no2\n\nSkim summary statistics\n n obs: 64328 \n n variables: 5 \n group variables:  \n\n── Variable type:factor ──────────────────────────────────────────────\n  variable missing complete     n n_unique\n tipo_zona       0    64328 64328        3\n                         top_counts ordered\n U: 42778, S: 15929, R: 5621, NA: 0   FALSE\n\n── Variable type:numeric ─────────────────────────────────────────────\n variable missing complete     n    mean    sd      p0     p25\n       dd       0    64328 64328   15.62  8.74    1       8   \n       mm       0    64328 64328    3.51  1.71    1       2   \n    value    2239    62089 64328   31.86 18.75    0.37   16.93\n       yy       0    64328 64328 2016.65  2.26 2013    2015   \n     p50     p75    p100     hist\n   16      23      31    ▇▇▇▇▆▇▇▆\n    4       5       6    ▇▇▁▇▇▁▇▇\n   28.33   43.31  161.12 ▇▇▅▂▁▁▁▁\n 2017    2019    2020    ▇▇▇▇▇▇▇▇\n\nDistibuzione no2 per tipo di zona (Urban, Suburban, Rural)\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd   p0   p25\n         R    value     236     5385  5621 23.29 13.34 0.37 13.25\n         S    value     713    15216 15929 26.59 14.68 0.72 14.8 \n         U    value    1290    41488 42778 34.9  19.88 0.79 18.91\n   p50   p75   p100     hist\n 20.11 31.22 123.77 ▇▇▃▁▁▁▁▁\n 23.49 36.21 124.82 ▆▇▅▂▁▁▁▁\n 31.86 47.5  161.12 ▆▇▆▂▁▁▁▁\n\n\n\n\n\nDistribuzione mensile no2\n\n\n\n\n\n\n",
    "preview": "posts/2021-02-11-analisi-no2-lombardia/analisi-no2-lombardia_files/figure-html5/mappaAra-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-11-analisi-variabili-meteolombardia/",
    "title": "Analisi variabili meteo, Lombardia",
    "description": "Descrizione parametri meteoclimatici, rianalisi ERA5.",
    "author": [
      {
        "name": "Andrea Algieri",
        "url": {}
      }
    ],
    "date": "2021-02-10",
    "categories": [],
    "contents": "\n\n\n\n\n\n\nDescrizione parametri\nLa lista dei parametri acquisiti da ERA5 è disponibile alla pagina: https://progettopulvirus.github.io/pulviruS/parametri.html\nTemperatura\n\n\n\nFigure 1: Temperatura (media, massima e minima)\n\n\n\nt2m\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean   sd    p0 p25  p50\n         R      t2m       0     5621  5621 11.92 7.13  -3.1 6   11.7\n         S      t2m       0    15929 15929 10.03 7.1  -12.6 4.3  9.4\n         U      t2m       0    42778 42778 10.12 7.71 -24.5 4.3  9.6\n  p75 p100     hist\n 17.3 32.7 ▂▇▇▇▇▅▂▁\n 15.5 31.4 ▁▁▆▇▇▆▂▁\n 16   32   ▁▁▁▅▇▇▃▁\n\ntmin2m\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd    p0 p25 p50\n         R   tmin2m       0     5621  5621 7.22 6.67  -9.2 1.7 6.7\n         S   tmin2m       0    15929 15929 5.28 6.75 -20.9 0.1 4.5\n         U   tmin2m       0    42778 42778 5.4  7.32 -34.1 0.1 4.8\n  p75 p100     hist\n 12.5 25.7 ▁▅▇▇▇▆▃▁\n 10.5 25.6 ▁▁▂▇▆▆▃▁\n 10.9 26.3 ▁▁▁▁▇▇▅▁\n\ntmax2m\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean   sd    p0  p25  p50\n         R   tmax2m       0     5621  5621 16.76 7.56  -1.2 10.3 16.7\n         S   tmax2m       0    15929 15929 14.55 7.46  -8.9  8.5 14.2\n         U   tmax2m       0    42778 42778 14.74 8.1  -18.7  8.7 14.5\n  p75 p100     hist\n 22.5 40.7 ▁▆▇▇▇▅▂▁\n 20.3 38.7 ▁▂▇▇▇▆▂▁\n 21   39.8 ▁▁▂▇▇▇▂▁\n\nPrecipitazione\n\n\n\nFigure 2: Precipitazione\n\n\n\ntp\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd p0 p25 p50 p75\n         R       tp       0     5621  5621 2.71 5.91  0   0 0.2 2.4\n         S       tp       0    15929 15929 3.71 7.35  0   0 0.5 3.9\n         U       tp       0    42778 42778 3.45 7.14  0   0 0.4 3.5\n  p100     hist\n  83.9 ▇▁▁▁▁▁▁▁\n  98.3 ▇▁▁▁▁▁▁▁\n 113   ▇▁▁▁▁▁▁▁\n\nPrecipitazione giorno precedente\n\n\n\nFigure 3: Precipitazione\n\n\n\nptp\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd p0 p25 p50 p75\n         R      ptp       0     5621  5621 2.7  5.91  0   0 0.2 2.4\n         S      ptp       0    15929 15929 3.7  7.35  0   0 0.5 3.9\n         U      ptp       0    42778 42778 3.44 7.14  0   0 0.3 3.4\n  p100     hist\n  83.9 ▇▁▁▁▁▁▁▁\n  98.3 ▇▁▁▁▁▁▁▁\n 113   ▇▁▁▁▁▁▁▁\n\nSurface pressure\n\n\n\nFigure 4: Surface pressure\n\n\n\nsp\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n    mean    sd    p0   p25\n         R       sp       0     5621  5621 1003.07  9.74 958.8 996.5\n         S       sp       0    15929 15929  969.22 38.4  853.9 962  \n         U       sp       0    42778 42778  972.33 54.92 728.3 968.9\n    p50    p75   p100     hist\n 1003.8 1009.5 1036.2 ▁▁▁▅▇▆▂▁\n  983.7  995.3 1030   ▁▂▁▁▂▆▇▁\n  989.5 1001.9 1038.8 ▁▁▁▁▁▁▇▅\n\nPlanet Boundary Layer\n\n\n\nFigure 5: Planet Boundary Layer (00:00, 12:00)\n\n\n\npbl00\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean   sd   p0  p25  p50\n         R    pbl00       0     5621  5621 0.13  0.15 0.01 0.04 0.07\n         S    pbl00       0    15929 15929 0.093 0.14 0.01 0.02 0.04\n         U    pbl00       0    42778 42778 0.1   0.15 0.01 0.03 0.05\n  p75 p100     hist\n 0.16 1.66 ▇▁▁▁▁▁▁▁\n 0.1  1.71 ▇▁▁▁▁▁▁▁\n 0.12 2.41 ▇▁▁▁▁▁▁▁\n\npbl12\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd   p0  p25  p50\n         R    pbl12       0     5621  5621 0.83 0.5  0.03 0.41 0.78\n         S    pbl12       0    15929 15929 0.82 0.5  0.01 0.42 0.78\n         U    pbl12       0    42778 42778 0.83 0.51 0.01 0.41 0.78\n  p75 p100     hist\n 1.15 3.63 ▇▇▇▂▁▁▁▁\n 1.12 3.25 ▇▇▇▃▁▁▁▁\n 1.14 3.64 ▇▇▇▂▁▁▁▁\n\nPlanet Boundary Layer daily maximun and minimun\n\n\n\nFigure 6: Planet Boundary Layer daily (max, min)\n\n\n\npblmax\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd   p0  p25  p50\n         R   pblmax       0     5621  5621 1.12 0.57 0.11 0.67 1.11\n         S   pblmax       0    15929 15929 1.08 0.57 0.02 0.63 1.07\n         U   pblmax       0    42778 42778 1.09 0.58 0.01 0.63 1.08\n  p75 p100     hist\n 1.5  3.63 ▆▆▇▅▂▁▁▁\n 1.43 4.85 ▆▇▆▂▁▁▁▁\n 1.46 4.85 ▆▇▆▂▁▁▁▁\n\npblmin\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd   p0  p25  p50\n         R   pblmin       0     5621  5621 0.046 0.057 0.01 0.02 0.03\n         S   pblmin       0    15929 15929 0.031 0.042 0.01 0.01 0.02\n         U   pblmin       0    42778 42778 0.036 0.048 0.01 0.01 0.02\n  p75 p100     hist\n 0.05 0.65 ▇▁▁▁▁▁▁▁\n 0.03 0.86 ▇▁▁▁▁▁▁▁\n 0.04 0.89 ▇▁▁▁▁▁▁▁\n\nWind Speed\n\n\n\nFigure 7: Wind Speed\n\n\n\nwspeed\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd p0  p25  p50\n         R   wspeed       0     5621  5621 1.33 0.89  0 0.64 1.12\n         S   wspeed       0    15929 15929 0.9  0.67  0 0.42 0.73\n         U   wspeed       0    42778 42778 1.04 0.77  0 0.5  0.85\n  p75 p100     hist\n 1.8  5.85 ▇▇▅▂▁▁▁▁\n 1.2  5.91 ▇▅▂▁▁▁▁▁\n 1.39 6.05 ▇▆▂▁▁▁▁▁\n\nPrevious day wind speed\n\n\n\nFigure 8: previous day Wind Speed\n\n\n\npwspeed\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n mean   sd p0  p25  p50\n         R  pwspeed       0     5621  5621 1.32 0.9   0 0.64 1.12\n         S  pwspeed       0    15929 15929 0.91 0.67  0 0.42 0.73\n         U  pwspeed       0    42778 42778 1.04 0.77  0 0.5  0.85\n  p75 p100     hist\n 1.8  5.85 ▇▇▅▂▁▁▁▁\n 1.2  5.91 ▇▅▂▁▁▁▁▁\n 1.39 6.05 ▇▆▂▁▁▁▁▁\n\nWind direction\n\n\n\nFigure 9: Wind Dir\n\n\n\nwdir\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n   mean     sd   p0   p25\n         R     wdir       0     5621  5621 170.08 100.41 2.73 78.69\n         S     wdir       0    15929 15929 175.48 124.09 1.04 59.74\n         U     wdir       0    42778 42778 175.8  117.98 1.4  71.57\n    p50    p75 p100     hist\n 180    262.87  360 ▃▇▅▂▅▆▅▂\n 149.04 296.57  360 ▇▆▃▂▂▅▅▇\n 153.43 284.04  360 ▇▇▅▂▂▆▅▇\n\nWind V component (10 meters) # vettore componente della direzione\n\n\n\nFigure 10: Wind V component-10 meters\n\n\n\nwindVcomponent\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n    mean   sd   p0  p25\n         R     v10m       0     5621  5621  0.0081 0.91 -5.2 -0.4\n         S     v10m       0    15929 15929 -0.33   0.68 -5.9 -0.6\n         U     v10m       0    42778 42778 -0.27   0.72 -5.6 -0.6\n  p50 p75 p100     hist\n  0   0.4  5.5 ▁▁▁▇▅▁▁▁\n -0.2 0.1  2.6 ▁▁▁▁▃▇▁▁\n -0.2 0.2  5.3 ▁▁▁▇▇▁▁▁\n\nNet irradiance\n\n\n\nFigure 11: Net irradiance\n\n\n\nnet irradiance\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona    variable missing complete     n   mean    sd  p0  p25\n         R nirradiance       0     5621  5621 140.83 74.19 3.5 73.1\n         S nirradiance       0    15929 15929 136.84 74.78 2.7 69.1\n         U nirradiance       0    42778 42778 136.57 76.66 3.1 67.8\n   p50   p75  p100     hist\n 143.1 207.7 280.3 ▅▇▆▆▆▇▇▃\n 134.2 204.8 305.6 ▅▇▆▅▆▇▅▁\n 132.9 206.2 309   ▅▇▆▅▆▆▅▁\n\nRelative Humidity\n\n\n\nFigure 12: Relative Humidity\n\n\n\nrelative Humidity\n\nSkim summary statistics\n n obs: 64328 \n n variables: 2 \n group variables: tipo_zona \n\n── Variable type:numeric ─────────────────────────────────────────────\n tipo_zona variable missing complete     n  mean    sd   p0  p25  p50\n         R       rh       0     5621  5621 75.05 13.03 27.4 66.7 75.8\n         S       rh       0    15929 15929 76.56 12.09 25.7 68.8 77.6\n         U       rh       0    42778 42778 75.92 12.59 21.6 67.8 76.9\n  p75 p100     hist\n 85.3 99.4 ▁▁▂▃▆▇▆▅\n 86.1 99   ▁▁▁▂▆▇▇▅\n 85.9 99.4 ▁▁▁▂▆▇▇▅\n\n\n\n\n",
    "preview": "posts/2021-02-11-analisi-variabili-meteolombardia/analisi-variabili-meteolombardia_files/figure-html5/t2m-1.png",
    "last_modified": "2021-02-22T23:21:44+01:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to pulvinla",
    "description": "Il lockdown visto con INLA!",
    "author": [
      {
        "name": "GF",
        "url": {}
      }
    ],
    "date": "2021-02-10",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-02-22T23:21:45+01:00",
    "input_file": {}
  }
]
